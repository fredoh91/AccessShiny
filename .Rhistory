produits_2<-dplyr::select(Babibs_Produits,denomination,DCI)
produits<-dplyr::union(produits_1,produits_2)
rm('produits_1','produits_2')
source("D:/Users/Frannou/Dev/R/AccessShiny/Tests/TestDT.R")
produits %>% datatable()
knitr::opts_chunk$set(echo = F,warning = F,message = F)
library(data.table)
library(readxl)
library(knitr)
load("S:/SUSAR/SHINY/dashboard/dashboard_Mrveille_prod/app/mrveille.RData")
dat_2020 <- dat[year(date)  >= 2020]
dat_2020[,semaine := tsibble::yearweek(date)]
dat_semaine_2020 <- setorder(dat_2020[,.(effectif=.N),by=.(semaine)],semaine)
kable(dat_semaine_2020)
dat_jour_2020 <- setorder(dat_2020[year(date)  >= 2020,.(effectif=.N),by=.(date)],date)
kable(dat_jour_2020)
dat_inddas <- dat_2020[Protocole %ilike% "ind|das" & year(date)  >= 2020,.N,by=.(semaine,Protocole)  ]
tempo <- dcast(dat_inddas,semaine~Protocole,fill=0)
tempo[,tot := DAS+IND]
kable(tempo)
dat_inddas <- dat_2020[Protocole %ilike% "ind|das" & year(date)  >= 2020,.N,by=.(substr(date,1,7),Protocole)  ]
names(dat_inddas)[1] <- "mois"
tempo <- dcast(dat_inddas,mois~Protocole,fill=0)
tempo[,total := DAS+IND]
tempo[,`:=`(
pct_DAS = round(100*(DAS/total),1),
pct_IND = round(100*(IND/total),1)
)]
kable(tempo)
dat_iris[,date := as.POSIXct(date_reception, format = "%Y-%m-%d")]
dat_iris[,semaine := tsibble::yearweek(date)]
dat_iris <- setorder(dat_iris[year(date)>=2020,.(effectif=.N),by=.(semaine)],semaine)
kable(dat_iris)
indicateur_steward <- data.table(read_excel("S:\\SUSAR\\SHINY\\indicateur_confinement\\indicateur_steward.xlsx"))[!is.na(effectif)]
kable(indicateur_steward)
shiny::runApp('AccessShiny')
source("D:/Users/Frannou/Dev/R/AccessShiny/Tests/TestDT.R")
source("D:/Users/Frannou/Dev/R/AccessShiny/Tests/TestDT.R")
source("D:/Users/Frannou/Dev/R/AccessShiny/Tests/TestDT.R")
library(DT)
source("D:/Users/Frannou/Dev/R/AccessShiny/Tests/TestDT.R")
source("D:/Users/Frannou/Dev/R/AccessShiny/Tests/TestDT.R")
class(produits)
str(produits)
# str(produits)
datatable(data = produits)
View(produits)
View(CM_Produits)
View(Babibs_TbMesuresBiblioMes_labo)
View(CM_CasMarquant)
shiny::runApp('AccessShiny')
runApp('AccessShiny')
shiny::runApp('AccessShiny_2')
library(DT)
# str(produits)
datatable(data = produits)
runApp('AccessShiny_2')
runApp('AccessShiny_2')
library(DT)
# str(produits)
# datatable(data = produits)
dataTableOutput( produits)
runApp('AccessShiny_2')
View(produits)
runApp('AccessShiny_2')
View(produits)
View(produits)
View(produits)
produits<-dplyr::arrange(produits,denomination)
View(produits)
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp()
runApp()
runApp()
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
View(CM_Produits)
# server-side processing
produits2 = produits[, 1:2]
View(produits2)
produits2[1,]
produits2[4,]
produits2[4,1]
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
produits_1<-dplyr::select(CM_Produits,DCI)
produits_2<-dplyr::select(Babibs_Produits,DCI)
produits<-dplyr::union(produits_1,produits_2)
produitsDCI<-dplyr::arrange(produits,DCI)
rm('produits_1','produits_2')
View(produitsDCI)
runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
produits_1<-dplyr::select(CM_Produits,DCI)
produits_2<-dplyr::select(Babibs_Produits,DCI)
produits<-dplyr::union(produits_1,produits_2)
produitsDCI<-dplyr::arrange(produits,DCI)
rm('produits_1','produits_2')
runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
runApp()
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
View(produits)
produits_1<-dplyr::select(CM_Produits,denomination,DCI)
produits_2<-dplyr::select(Babibs_Produits,denomination,DCI)
produits<-dplyr::union(produits_1,produits_2)
produits<-dplyr::arrange(produits,denomination)
rm('produits_1','produits_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
View(produitsDCI)
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
produitsDCI[2,1]
View(produitsDCI)
View(produitsDCI)
runApp('AccessShiny_2')
runApp()
runApp('AccessShiny_2')
runApp('AccessShiny_2')
# Recherche par produits
produits2 = produits[, 1:2]
produits2[4,1]
produits2[c(1,2),1]
runApp('AccessShiny_2')
remove.packages("Rpgs", lib="~/R/R-4.1.1/library")
install.packages("S:/SUSAR/SHINY/reporting/0-package/Rpgs_0.1.8.tar.gz", repos = NULL, type = "source")
remove.packages("Rpgs", lib="~/R/R-4.1.1/library")
install.packages("S:/SUSAR/SHINY/reporting/0-package/Rpgs_0.1.8.tar.gz", repos = NULL, type = "source")
shiny::runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
View(CM_Produits)
filter(CM_Produits,denomination = "INLYTA")
filter(CM_Produits,denomination == "INLYTA")
runApp('AccessShiny_2')
runApp()
runApp('AccessShiny_2')
runApp()
runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp()
runApp('AccessShiny_2')
View(CM_CasMarquant)
runApp('AccessShiny_2')
add_column(CM_CasMarquant,TypeSignal="CM")
library(dplyr)
add_column(CM_CasMarquant,TypeSignal="CM")
add_column(CM_CasMarquant,TypeSignal="CM")
dplyr::add_column(CM_CasMarquant,TypeSignal="CM")
dplyr::mutate(CM_CasMarquant,TypeSignal="CM")
View(CM_CasMarquant)
#test<-dplyr::union()
View(CM_CasMarquant)
shiny::runApp('AccessShiny_2')
runApp('AccessShiny_2')
View(Babibs_TbSignal)
View(produits2)
View(Babibs_Produits)
runApp('AccessShiny_2')
View(Babibs_Produits)
runApp('AccessShiny_2')
View(Babibs_Produits)
runApp('AccessShiny_2')
View(Babibs_TbBiblio)
runApp('AccessShiny_2')
runApp('AccessShiny_2')
View(Babibs_Produits)
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
#test<-dplyr::union()
# mutate(CM_CasMarquant,TypeSignal="CM")
test <- Babibs_Produits %>% inner_join(Babibs_TbSignal, Babibs_TbBiblio, by = "IdSignal") %>% filter (Babibs_Produits$denomination %in% c("ADALIMUMAB ((MAMMIFERE/HAMSTER/CHO))","ADALIMUMAB"))
test <- Babibs_Produits %>% inner_join(Babibs_TbSignal, Babibs_TbBiblio, by = "IdSignal")
View(test)
rm(test)
View(Babibs_Produits)
test <-  select(Babibs_Produits,denomination,DCI,IdSignal)
View(test)
test <-  select(Babibs_Produits,denomination,DCI,IdSignal) %>% inner_join(select(Babibs_TbSignal,IdSignal,IdBiblio), by = "IdSignal")
View(Babibs_TbSignal)
test <-  select(Babibs_Produits,denomination,DCI,IdSignal) %>% inner_join(select(Babibs_TbSignal,IdSignal,NumSignal), by = "IdSignal")
View(test)
View(Babibs_TbBiblio)
test <-  select(Babibs_Produits,denomination,DCI,IdSignal) %>% inner_join(select(Babibs_TbSignal,IdSignal,NumSignal), by = "IdSignal") %>% inner_join(select(Babibs_TbBiblio,IdBiblio), by = "IdSignal")
test <-  select(Babibs_Produits,denomination,DCI,IdSignal) %>% inner_join(select(Babibs_TbSignal,IdSignal,NumSignal), by = "IdSignal") %>% inner_join(select(Babibs_TbBiblio,IdSignal,IdBiblio), by = "IdSignal")
View(test)
rm(test)
test <- select(Babibs_Produits,denomination,DCI,IdSignal) %>% inner_join(select(Babibs_TbSignal,IdSignal,NumSignal), by = "IdSignal") %>% inner_join(select(Babibs_TbBiblio,IdSignal,IdBiblio), by = "IdSignal") %>% filter (Babibs_Produits$denomination %in% c("ADALIMUMAB ((MAMMIFERE/HAMSTER/CHO))","ADALIMUMAB"))
test <- select(Babibs_Produits,denomination,DCI,IdSignal) %>% inner_join(select(Babibs_TbSignal,IdSignal,NumSignal), by = "IdSignal") %>% inner_join(select(Babibs_TbBiblio,IdSignal,IdBiblio), by = "IdSignal") %>% filter (denomination %in% c("ADALIMUMAB ((MAMMIFERE/HAMSTER/CHO))","ADALIMUMAB"))
View(test)
test <- select(Babibs_Produits,denomination,DCI,IdSignal) %>% inner_join(select(Babibs_TbSignal,IdSignal,NumSignal), by = "IdSignal") %>% inner_join(select(Babibs_TbBiblio,IdSignal,IdBiblio), by = "IdSignal") %>% mutate(TypeSignal="Biblio") %>% filter (denomination %in% c("ADALIMUMAB ((MAMMIFERE/HAMSTER/CHO))","ADALIMUMAB"))
View(test)
rm(test)
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
test <- select(Babibs_Produits,denomination,DCI,IdSignal) %>% inner_join(select(Babibs_TbSignal,IdSignal,NumSignal), by = "IdSignal") %>% inner_join(select(Babibs_TbBiblio,IdSignal,IdBiblio), by = "IdSignal") %>% mutate(TypeSignal="Biblio") %>% rename("NumSignal","NumCRPV/NumSignal") %>%  filter (denomination %in% c("ADALIMUMAB ((MAMMIFERE/HAMSTER/CHO))","ADALIMUMAB"))
test <- select(Babibs_Produits,denomination,DCI,IdSignal) %>% inner_join(select(Babibs_TbSignal,IdSignal,NumSignal), by = "IdSignal") %>% inner_join(select(Babibs_TbBiblio,IdSignal,IdBiblio), by = "IdSignal") %>% mutate(TypeSignal="Biblio") %>% rename("NumCRPV/NumSignal" = "NumSignal") %>%  filter (denomination %in% c("ADALIMUMAB ((MAMMIFERE/HAMSTER/CHO))","ADALIMUMAB"))
View(test)
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
View(CM_Produits)
View(CM_CasMarquant)
runApp('AccessShiny_2')
runApp('AccessShiny_2')
View(CM_CasMarquant)
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp()
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
test <- select(CM_Produits,denomination,DCI,idCas) %>%
inner_join(select(CM_CasMarquant,idCas,numeroCRPV), by = "idCas") %>%
mutate(TypeSignal="CM") %>%
rename("NumCRPV/NumSignal" = "numeroCRPV","Id" = "idCas") %>%
filter (denomination %in% c("ABILIFY","ABILIFY 1 mg/ml, solution buvable"))
View(test)
runApp('AccessShiny_2')
test <-       select(Babibs_Produits,denomination,DCI,IdSignal) %>%
inner_join(select(Babibs_TbSignal,IdSignal,NumSignal), by = "IdSignal") %>%
inner_join(select(Babibs_TbBiblio,IdSignal), by = "IdSignal") %>%
mutate(TypeSignal="Biblio") %>%
rename("NumCRPV/NumSignal" = "NumSignal","Id" = "IdSignal") %>%
filter (denomination %in% c("ADALIMUMAB","ADALIMUMAB ((MAMMIFERE/HAMSTER/CHO))"))
View(test)
test <- select(CM_Produits,denomination,DCI,idCas) %>%
inner_join(select(CM_CasMarquant,idCas,numeroCRPV), by = "idCas") %>%
mutate(TypeSignal="CM") %>%
rename("NumCRPV/NumSignal" = "numeroCRPV","Id" = "idCas") %>%
filter (denomination %in% c("ABILIFY","ABILIFY 1 mg/ml, solution buvable"))
test <- union_all (select(CM_Produits,denomination,DCI,idCas) %>%
inner_join(select(CM_CasMarquant,idCas,numeroCRPV), by = "idCas") %>%
mutate(TypeSignal="CM") %>%
rename("NumCRPV/NumSignal" = "numeroCRPV","Id" = "idCas") %>%
filter (denomination %in% c("ABILIFY","ABILIFY 1 mg/ml, solution buvable")),
select(Babibs_Produits,denomination,DCI,IdSignal) %>%
inner_join(select(Babibs_TbSignal,IdSignal,NumSignal), by = "IdSignal") %>%
inner_join(select(Babibs_TbBiblio,IdSignal), by = "IdSignal") %>%
mutate(TypeSignal="Biblio") %>%
rename("NumCRPV/NumSignal" = "NumSignal","Id" = "IdSignal") %>%
filter (denomination %in% c("ADALIMUMAB","ADALIMUMAB ((MAMMIFERE/HAMSTER/CHO))")))
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
table(test)
length(test)
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
View(sProduit)
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp()
runApp('AccessShiny_2')
runApp('AccessShiny_2')
View(CM_tempo)
View(Biblio_tempo)
View(CM_Biblio)
View(CM_Biblio)
runApp('AccessShiny_2')
View(CM_Biblio)
View(CM_Biblio)
View(CM_Biblio)
shiny::runApp('AccessShiny_2')
detach("package:data.table", unload = TRUE)
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
View(CM_CasMarquant)
View(Babibs_Produits)
View(Babibs_TbMesusage)
runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
rm(test)
shiny::runApp('AccessShiny_2')
remove.packages("Rpgs", lib="~/R/R-4.1.1/library")
install.packages("S:/SUSAR/SHINY/reporting/0-package/Rpgs_0.1.9.tar.gz", repos = NULL, type = "source")
remove.packages("Rpgs", lib="~/R/R-4.1.1/library")
install.packages("S:/SUSAR/SHINY/reporting/0-package/Rpgs_0.1.9.tar.gz", repos = NULL, type = "source")
View(Babibs_Historique)
View(Babibs_Historique)
View(Babibs_Produits)
View(Babibs_TbBiblio)
View(Babibs_Produits)
View(Babibs_TbMesuresBiblioMes)
View(Babibs_TbMesuresBiblioMes_labo)
View(Babibs_TbMesusage)
View(Babibs_TbSignal)
View(CM_CasMarquant)
View(CM_Historique)
View(CM_IntervenantCM)
View(CM_Produits)
View(CM_TbMesuresCalendrier)
View(Babibs_Historique)
shiny::runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
shiny::runApp('G:/DM-DSSE/EURINTER/_PROD/MAP_PROD')
shiny::runApp('AccessShiny_2')
install.packages("RMariaDB")
install.packages(c("backports", "broom", "cli", "cpp11", "crayon", "crosstalk", "digest", "DT", "dtplyr", "flextable", "fs", "future", "glue", "keyring", "lmtest", "Matrix", "officer", "parallelly", "RcppArmadillo", "readr", "rlang", "rsample", "slam", "sp", "stringi", "tibble", "timetk", "tinytex", "tseries", "tsibble", "tzdb", "uuid", "vroom", "withr", "xfun", "xml2"))
drv<- RJDBC::JDBC("org.mariadb.jdbc.Driver",
classPath = system.file("java/mariadb-java-client-2.7.0.jar"
,package="Rpgs")
source("~/.active-rstudio-document")
drv<- RJDBC::JDBC("org.mariadb.jdbc.Driver",
classPath = system.file("java/mariadb-java-client-2.7.0.jar"
,package="Rpgs")
)
con <- RJDBC::dbConnect(drv, "jdbc:mariadb://127.0.0.1:3306/access_shiny",
"root", "root"  )
dbListTables(con)
library(DBI)
dbListTables(con)
library(RJDBC)
library(DBI)
drv<- RJDBC::JDBC("org.mariadb.jdbc.Driver",
classPath = system.file("java/mariadb-java-client-2.7.0.jar"
,package="Rpgs")
)
con <- RJDBC::dbConnect(drv, "jdbc:mariadb://127.0.0.1:3306/access_shiny",
"root", "root"  )
dbListTables(con)
drv<- RJDBC::JDBC("org.mariadb.jdbc.Driver",
classPath = system.file("java/mariadb-java-client-2.7.0.jar"
,package="Rpgs")
)
con <- RJDBC::dbConnect(drv, "jdbc:mariadb://127.0.0.1:3306/access_shiny",
"root", "root"  )
con <- RJDBC::dbConnect(drv, "jdbc:mariadb://127.0.0.1:3306/access_shiny",
"root", "root"  )
(con)
View(con)
con <- dbConnect(RMariaDB::MariaDB(), host = "127.0.0.1", dbname = "access_shiny",
user = "root", password = "root")
View(con)
con
source("D:/Users/Frannou/Dev/R/AccessShiny/Tests/TestRMARIADB.R")
dbListTables(con)
source("D:/Users/Frannou/Dev/R/AccessShiny/Tests/TestRMARIADB.R", echo=TRUE)
rm(con)
source("D:/Users/Frannou/Dev/R/AccessShiny/Tests/TestRMARIADB.R", echo=TRUE)
rm(con)
con
source("D:/Users/Frannou/Dev/R/AccessShiny/Tests/TestRMARIADB.R", echo=TRUE)
con
rm(con)
source("D:/Users/Frannou/Dev/R/AccessShiny/Tests/TestRMARIADB.R", echo=TRUE)
shiny::runApp('AccessShiny_2')
install.packages("pool")
library(pool)
pool <- dbPool(
drv = RMariaDB::MariaDB(),
dbname = "access_shiny",
host = "127.0.0.1",
username = "root",
password = "root"
)
dbListTables(pool)
shiny::runApp('AccessShiny_2')
source("D:/Users/Frannou/Dev/R/AccessShiny/Tests/TestRMARIADB.R", echo=TRUE)
shiny::runApp('AccessShiny_2')
runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
runApp('AccessShiny_2')
source("D:/Users/Frannou/Dev/R/AccessShiny/Tests/TestRMARIADB.R", echo=TRUE)
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp()
runApp('AccessShiny_2')
save.image("D:/Users/Frannou/Dev/R/AccessShiny/AccessShiny_2/AccessShiny.RData")
shiny::runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
produits<-dbGetQuery(pool, "SELECT denomination,DCI FROM cm_produits UNION SELECT denomination,DCI FROM babibs_produits ORDER BY denomination")
produits<-dbGetQuery(pool, "SELECT denomination,DCI FROM cm_produits UNION SELECT denomination,DCI FROM babibs_produits") %>% arrange(denomination)
produits<-dbGetQuery(pool, "SELECT denomination,DCI FROM cm_produits UNION SELECT denomination,DCI FROM babibs_produits")
library(shiny)
library(DT)
library(dplyr)
library(data.table)
library(RJDBC)
library(DBI)
library(pool)
produits<-dbGetQuery(pool, "SELECT denomination,DCI FROM cm_produits UNION SELECT denomination,DCI FROM babibs_produits")
pool <- dbPool(
drv = RMariaDB::MariaDB(),
dbname = "access_shiny",
host = "127.0.0.1",
username = "root",
password = "root"
)
produits<-dbGetQuery(pool, "SELECT denomination,DCI FROM cm_produits UNION SELECT denomination,DCI FROM babibs_produits")
rm(produits)
produits<-dbGetQuery(pool, "SELECT denomination,DCI FROM cm_produits UNION SELECT denomination,DCI FROM babibs_produits ORDER BY denomination")
View(produits)
produits<-dbGetQuery(pool, "SELECT denomination,DCI FROM cm_produits UNION SELECT denomination,DCI FROM babibs_produits ORDER BY denomination,DCI")
produitsDCI<-dbGetQuery(pool, "SELECT DCI FROM cm_produits UNION SELECT DCI FROM babibs_produits ORDER BY DCI")
runApp('AccessShiny_2')
test<-dbGetQuery(pool, "SELECT denomination,DCI,idCas, TypeSignal='CM' FROM cm_produits INNER JOIN idCas,numeroCRPV FROM cm_casmarquant ON cm_produits.idCas = cm_casmarquant.idCas")
pool <- dbPool(
drv = RMariaDB::MariaDB(),
dbname = "access_shiny",
host = "127.0.0.1",
username = "root",
password = "root"
)
test<-dbGetQuery(pool, "SELECT denomination,DCI,idCas, TypeSignal='CM' FROM cm_produits INNER JOIN idCas,numeroCRPV FROM cm_casmarquant ON cm_produits.idCas = cm_casmarquant.idCas")
test<-dbGetQuery(pool, "SELECT cm_produits.denomination,cm_produits.DCI,cm_produits.idCas,cm_produits.numeroCRPV,TypeSignal='CM' FROM cm_produits INNER JOIN cm_casmarquant ON cm_produits.idCas = cm_casmarquant.idCas")
test<-dbGetQuery(pool, "SELECT cm_produits.denomination,cm_produits.DCI,cm_produits.idCas,cm_casmarquant.numeroCRPV,TypeSignal='CM' FROM cm_produits INNER JOIN cm_casmarquant ON cm_produits.idCas = cm_casmarquant.idCas")
test<-dbGetQuery(pool, "SELECT cm_produits.denomination,cm_produits.DCI,cm_produits.idCas,cm_casmarquant.numeroCRPV,'CM' AS TypeSignal FROM cm_produits INNER JOIN cm_casmarquant ON cm_produits.idCas = cm_casmarquant.idCas")
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
View(pool)
pool %>% tbl(cm_produits)  %>% collect()
runApp('AccessShiny_2')
pool %>% tbl(cm_produits)  %>% collect()
pool %>% tbl("cm_produits)  %>% collect()
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
View(produits)
runApp('AccessShiny_2')
runApp('AccessShiny_2')
View(produits)
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp()
runApp('AccessShiny_2')
runApp()
runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
View(produitsDCI)
runApp('AccessShiny_2')
View(produitsDCI)
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
View(produitsDCI)
View(produitsDCI)
runApp('AccessShiny_2')
runApp('AccessShiny_2')
runApp('AccessShiny_2')
shiny::runApp('AccessShiny_2')
